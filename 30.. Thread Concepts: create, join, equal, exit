#include <stdio.h>
#include <pthread.h>
#include <unistd.h>
void* thread_func(void* arg) {
    printf("Thread started, ID: %ld\n", pthread_self());
    pthread_exit((void*) 0);
}
int main() {
    pthread_t t1, t2;
    int ret;
    ret = pthread_create(&t1, NULL, thread_func, NULL);
    if (ret != 0) {
        perror("pthread_create");
        return 1;
    }
    ret = pthread_create(&t2, NULL, thread_func, NULL);
    if (ret != 0) {
        perror("pthread_create");
        return 1;
    }
    pthread_join(t1, NULL);
    pthread_join(t2, NULL);
    if (pthread_equal(t1, t2)) {
        printf("Threads are equal\n");
    } else {
        printf("Threads are NOT equal\n");
    }

    printf("Main thread exiting\n");
    return 0;
}
